interface ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!

  """
  A unique identifier for the record
  """
  id: ID!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Location implements ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  projects: [Project!]

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  users: [User!]
}

type Mutation {
  """
  Login for users
  """
  login(email: String!, password: String!): User

  """
  Logout for users
  """
  logout: Boolean
  resetPassword(password: String!, passwordConfirmation: String!, resetPasswordToken: String!): Boolean

  """
  Send password reset instructions to users email
  """
  sendResetPasswordInstructions(email: String!): Boolean

  """
  Sign up for users
  """
  signUp(email: String!, name: String!, password: String!, passwordConfirmation: String!): User

  """
  JWT token login
  """
  tokenLogin: User

  """
  Update user
  """
  updateUser(password: String, passwordConfirmation: String): User
}

type Project implements ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  id: ID!
  locations: [Location!]
  name: String!
  roles: [Role!]

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  users: [User!]
}

type Query {
  """
  Gets the specified location
  """
  location(id: ID!): Location

  """
  Gets all locations for current user
  """
  locations: [Location!]

  """
  Gets the specified project
  """
  project(id: ID!): Project

  """
  Gets all projects for current user
  """
  projects: [Project!]

  """
  Gets the specified role
  """
  role(id: ID!): Role

  """
  Gets all roles for current user
  """
  roles: [Role!]

  """
  Gets the specified user
  """
  user(id: ID!): User

  """
  Gets all users
  """
  users: [User!]
}

type Role implements ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  projects: [Project!]

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
  users: [User!]
}

type User implements ActiveRecord {
  """
  The date and time when then record was created
  """
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  locations: [Location!]
  name: String!
  projects: [Project!]
  roles: [Role!]
  token: String!

  """
  The date and time the record was last updated
  """
  updatedAt: ISO8601DateTime!
}